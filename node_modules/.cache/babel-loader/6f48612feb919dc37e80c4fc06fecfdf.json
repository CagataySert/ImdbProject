{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { action, observable, toJS } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nimport fetch from 'isomorphic-unfetch';\nimport { API_BASE } from '../constants/constants.js';\nimport { configure } from \"mobx\";\nvar isServer = typeof window === 'undefined';\nuseStaticRendering(isServer);\nvar Store = (_class = (_temp = function Store() {\n  var _this = this;\n\n  var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, Store);\n\n  _initializerDefineProperty(this, \"films\", _descriptor, this);\n\n  this.searchFilm =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(title, year, type) {\n      var response, _ref2, Search;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(API_BASE, \"&s=\").concat(title, \"&y=\").concat(year, \"&type=\").concat(type));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              _ref2 = _context.sent;\n              Search = _ref2.Search;\n\n              _this.setData(Search);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  _initializerDefineProperty(this, \"setData\", _descriptor2, this);\n\n  this.films = initialData;\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"films\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"setData\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (data) {\n      _this2.films = data;\n      console.log('setData:', _this2.films);\n    };\n  }\n})), _class);\nvar store = null;\nexport function initializeStore(initialData) {\n  if (isServer) {\n    return new Store(initialData);\n  } else {\n    if (store === null) {\n      store = new Store(initialData);\n    }\n\n    return store;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\cagat\\OneDrive\\Desktop\\Imdb\\stores\\store.js"],"names":["action","observable","toJS","useStaticRendering","fetch","API_BASE","configure","isServer","window","Store","initialData","searchFilm","title","year","type","response","json","Search","setData","films","data","console","log","store","initializeStore"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,SAAT,QAA0B,MAA1B;AAGA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACAL,kBAAkB,CAACI,QAAD,CAAlB;IAEME,K,sBAGF,iBAA8B;AAAA;;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAAA;;AAAA,OAI9BC,UAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA,6BAIjB,iBAAOC,KAAP,EAAcC,IAAd,EAAoBC,IAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcV,KAAK,WAAIC,QAAJ,gBAAkBO,KAAlB,gBAA6BC,IAA7B,mBAA0CC,IAA1C,EADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,qBAEgBA,QAAQ,CAACC,IAAT,EAFhB;;AAAA;AAAA;AAEDC,cAAAA,MAFC,SAEDA,MAFC;;AAGT,cAAA,KAAI,CAACC,OAAL,CAAaD,MAAb;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJiB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAC1B,OAAKE,KAAL,GAAaT,WAAb;AACH,C,+EAJAT,U;;;;;WAAmB,E;;2EAYnBD,M;;;;;;;WAAiB,UAACoB,IAAD,EAAU;AACxB,MAAA,MAAI,CAACD,KAAL,GAAaC,IAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,MAAI,CAACH,KAA7B;AAEH,K;;;AAGL,IAAII,KAAK,GAAG,IAAZ;AAEA,OAAO,SAASC,eAAT,CAAyBd,WAAzB,EAAsC;AACzC,MAAIH,QAAJ,EAAc;AACV,WAAO,IAAIE,KAAJ,CAAUC,WAAV,CAAP;AACH,GAFD,MAGK;AACD,QAAIa,KAAK,KAAK,IAAd,EAAoB;AAChBA,MAAAA,KAAK,GAAG,IAAId,KAAJ,CAAUC,WAAV,CAAR;AACH;;AACD,WAAOa,KAAP;AACH;AACJ","sourcesContent":["import { action, observable, toJS } from 'mobx'\r\nimport { useStaticRendering } from 'mobx-react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { API_BASE } from '../constants/constants.js';\r\nimport { configure } from \"mobx\";\r\n\r\n\r\nconst isServer = typeof window === 'undefined'\r\nuseStaticRendering(isServer)\r\n\r\nclass Store {\r\n    @observable films = {};\r\n\r\n    constructor(initialData = {}) {\r\n        this.films = initialData;\r\n    }\r\n\r\n    searchFilm = async (title, year, type) => {\r\n        const response = await fetch(`${API_BASE}&s=${title}&y=${year}&type=${type}`);\r\n        const { Search } = await response.json();\r\n        this.setData(Search);\r\n    }\r\n\r\n    @action setData = (data) => {\r\n        this.films = data;\r\n        console.log('setData:', this.films);\r\n\r\n    }\r\n}\r\n\r\nlet store = null\r\n\r\nexport function initializeStore(initialData) {\r\n    if (isServer) {\r\n        return new Store(initialData)\r\n    }\r\n    else {\r\n        if (store === null) {\r\n            store = new Store(initialData)\r\n        }\r\n        return store\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}