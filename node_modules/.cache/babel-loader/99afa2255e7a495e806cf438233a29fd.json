{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { action, observable } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nimport fetch from 'isomorphic-unfetch';\nimport { API_BASE } from '../constants/constants.js';\nvar isServer = typeof window === 'undefined';\nuseStaticRendering(isServer);\nvar Store = (_class = (_temp = function Store() {\n  var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, Store);\n\n  _initializerDefineProperty(this, \"films\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"searchFilm\", _descriptor2, this);\n\n  this.films = initialData.films != null ? initialData.films : null;\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"films\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"searchFilm\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(title, year, type) {\n          var response, jsonData;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return fetch(\"\".concat(API_BASE, \"&s=\").concat(title, \"&y=\").concat(year, \"&type=\").concat(type));\n\n                case 2:\n                  response = _context.sent;\n                  _context.next = 5;\n                  return response.json();\n\n                case 5:\n                  jsonData = _context.sent;\n                  _this.films = jsonData.Search;\n                  console.log('Data : ', jsonData.films);\n                  console.log('films:', _this.films);\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2, _x3) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    );\n  }\n})), _class);\nvar store = null;\nexport function initializeStore(initialData) {\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  return store;\n}","map":{"version":3,"sources":["C:\\Users\\cagat\\OneDrive\\Desktop\\Imdb\\stores\\store.js"],"names":["action","observable","useStaticRendering","fetch","API_BASE","isServer","window","Store","initialData","films","title","year","type","response","json","jsonData","Search","console","log","store","initializeStore"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AAGA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACAJ,kBAAkB,CAACG,QAAD,CAAlB;IAEME,K,sBAGF,iBAA8B;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAAA;;AAAA;;AAC1B,OAAKC,KAAL,GAAaD,WAAW,CAACC,KAAZ,IAAqB,IAArB,GACPD,WAAW,CAACC,KADL,GAEP,IAFN;AAGH,C,+EANAR,U;;;;;WAAmB,I;;8EAQnBD,M;;;;;;;;;;;;iCAAoB,iBAAOU,KAAP,EAAaC,IAAb,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACMT,KAAK,WAAIC,QAAJ,gBAAkBM,KAAlB,gBAA6BC,IAA7B,mBAA0CC,IAA1C,EADX;;AAAA;AACXC,kBAAAA,QADW;AAAA;AAAA,yBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEXC,kBAAAA,QAFW;AAGjB,kBAAA,KAAI,CAACN,KAAL,GAAaM,QAAQ,CAACC,MAAtB;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,QAAQ,CAACN,KAA/B;AACAQ,kBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAI,CAACT,KAA3B;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;;;;;;;;;AASzB,IAAIU,KAAK,GAAG,IAAZ;AAEA,OAAO,SAASC,eAAT,CAAyBZ,WAAzB,EAAsC;AACzC,MAAIH,QAAJ,EAAc;AACV,WAAO,IAAIE,KAAJ,CAAUF,QAAV,EAAoBG,WAApB,CAAP;AACH;;AACD,MAAIW,KAAK,KAAK,IAAd,EAAoB;AAChBA,IAAAA,KAAK,GAAG,IAAIZ,KAAJ,CAAUF,QAAV,EAAoBG,WAApB,CAAR;AACH;;AACD,SAAOW,KAAP;AACH","sourcesContent":["import { action, observable } from 'mobx'\r\nimport { useStaticRendering } from 'mobx-react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport {API_BASE} from '../constants/constants.js';\r\n\r\n\r\nconst isServer = typeof window === 'undefined'\r\nuseStaticRendering(isServer)\r\n\r\nclass Store {\r\n    @observable films = null;\r\n\r\n    constructor(initialData = {}) {\r\n        this.films = initialData.films != null\r\n            ? initialData.films\r\n            : null;\r\n    }\r\n\r\n    @action searchFilm = async (title,year,type) => {\r\n        const response = await fetch(`${API_BASE}&s=${title}&y=${year}&type=${type}`);\r\n        const jsonData = await response.json();\r\n        this.films = jsonData.Search;\r\n        console.log('Data : ',jsonData.films);\r\n        console.log('films:' ,this.films);\r\n    }\r\n}\r\n\r\nlet store = null\r\n\r\nexport function initializeStore(initialData) {\r\n    if (isServer) {\r\n        return new Store(isServer, initialData)\r\n    }\r\n    if (store === null) {\r\n        store = new Store(isServer, initialData)\r\n    }\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}