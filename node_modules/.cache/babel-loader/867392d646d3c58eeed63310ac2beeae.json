{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { action, observable } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nvar isServer = typeof window === 'undefined';\nuseStaticRendering(isServer);\nvar Store = (_class = (_temp = function Store() {\n  var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, Store);\n\n  _initializerDefineProperty(this, \"type\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"title\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"year\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"changeMessage\", _descriptor4, this);\n\n  this.message = initialData.message != null ? initialData.message : '';\n  this.message = initialData.message != null ? initialData.message : '';\n  this.message = initialData.message != null ? initialData.message : '';\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"type\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"title\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"year\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"changeMessage\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function (newMessage) {\n      _this.message = newMessage;\n    };\n  }\n})), _class);\nvar store = null;\nexport function initializeStore(initialData) {\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  return store;\n}","map":{"version":3,"sources":["C:\\Users\\cagat\\OneDrive\\Desktop\\Imdb\\stores\\store.js"],"names":["action","observable","useStaticRendering","isServer","window","Store","initialData","message","newMessage","store","initializeStore"],"mappings":";;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AAEA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACAF,kBAAkB,CAACC,QAAD,CAAlB;IAEME,K,sBAKF,iBAA8B;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAC1B,OAAKC,OAAL,GAAeD,WAAW,CAACC,OAAZ,IAAuB,IAAvB,GACTD,WAAW,CAACC,OADH,GAET,EAFN;AAIA,OAAKA,OAAL,GAAeD,WAAW,CAACC,OAAZ,IAAuB,IAAvB,GACTD,WAAW,CAACC,OADH,GAET,EAFN;AAIA,OAAKA,OAAL,GAAeD,WAAW,CAACC,OAAZ,IAAuB,IAAvB,GACTD,WAAW,CAACC,OADH,GAET,EAFN;AAGH,C,8EAhBAN,U;;;;;WAAkB,E;;yEAClBA,U;;;;;WAAmB,E;;wEACnBA,U;;;;;WAAkB,E;;iFAgBlBD,M;;;;;;;WAAuB,UAACQ,UAAD,EAAgB;AACpC,MAAA,KAAI,CAACD,OAAL,GAAeC,UAAf;AACH,K;;;AAGL,IAAIC,KAAK,GAAG,IAAZ;AAEA,OAAO,SAASC,eAAT,CAAyBJ,WAAzB,EAAsC;AACzC,MAAIH,QAAJ,EAAc;AACV,WAAO,IAAIE,KAAJ,CAAUF,QAAV,EAAoBG,WAApB,CAAP;AACH;;AACD,MAAIG,KAAK,KAAK,IAAd,EAAoB;AAChBA,IAAAA,KAAK,GAAG,IAAIJ,KAAJ,CAAUF,QAAV,EAAoBG,WAApB,CAAR;AACH;;AACD,SAAOG,KAAP;AACH","sourcesContent":["import { action, observable } from 'mobx'\r\nimport { useStaticRendering } from 'mobx-react'\r\n\r\nconst isServer = typeof window === 'undefined'\r\nuseStaticRendering(isServer)\r\n\r\nclass Store {\r\n    @observable type = '';\r\n    @observable title = '';\r\n    @observable year = '';\r\n\r\n    constructor(initialData = {}) {\r\n        this.message = initialData.message != null\r\n            ? initialData.message\r\n            : '';\r\n        \r\n        this.message = initialData.message != null\r\n            ? initialData.message\r\n            : '';\r\n\r\n        this.message = initialData.message != null\r\n            ? initialData.message\r\n            : ''\r\n    }\r\n\r\n    @action changeMessage = (newMessage) => {\r\n        this.message = newMessage;\r\n    }\r\n}\r\n\r\nlet store = null\r\n\r\nexport function initializeStore(initialData) {\r\n    if (isServer) {\r\n        return new Store(isServer, initialData)\r\n    }\r\n    if (store === null) {\r\n        store = new Store(isServer, initialData)\r\n    }\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}