{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { action, observable } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nimport fetch from 'isomorphic-unfetch';\nvar isServer = typeof window === 'undefined';\nuseStaticRendering(isServer);\nvar Store = (_class = (_temp = function Store() {\n  var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, Store);\n\n  _initializerDefineProperty(this, \"films\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"searchFilm\", _descriptor2, this);\n\n  this.films = initialData.films != null ? initialData.films : null;\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"films\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"searchFilm\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(title, year, type) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2, _x3) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    );\n  }\n})), _class);\nvar store = null;\nexport function initializeStore(initialData) {\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  return store;\n}","map":{"version":3,"sources":["C:\\Users\\cagat\\OneDrive\\Desktop\\Imdb\\stores\\store.js"],"names":["action","observable","useStaticRendering","fetch","isServer","window","Store","initialData","films","title","year","type","store","initializeStore"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACAH,kBAAkB,CAACE,QAAD,CAAlB;IAEME,K,sBAGF,iBAA8B;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAAA;;AAAA;;AAC1B,OAAKC,KAAL,GAAaD,WAAW,CAACC,KAAZ,IAAqB,IAArB,GACPD,WAAW,CAACC,KADL,GAEP,IAFN;AAGH,C,+EANAP,U;;;;;8EAQAD,M;;;;;;;;;;iCAAoB,iBAAOS,KAAP,EAAaC,IAAb,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;;;;;;;;;AAKzB,IAAIC,KAAK,GAAG,IAAZ;AAEA,OAAO,SAASC,eAAT,CAAyBN,WAAzB,EAAsC;AACzC,MAAIH,QAAJ,EAAc;AACV,WAAO,IAAIE,KAAJ,CAAUF,QAAV,EAAoBG,WAApB,CAAP;AACH;;AACD,MAAIK,KAAK,KAAK,IAAd,EAAoB;AAChBA,IAAAA,KAAK,GAAG,IAAIN,KAAJ,CAAUF,QAAV,EAAoBG,WAApB,CAAR;AACH;;AACD,SAAOK,KAAP;AACH","sourcesContent":["import { action, observable } from 'mobx'\r\nimport { useStaticRendering } from 'mobx-react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst isServer = typeof window === 'undefined'\r\nuseStaticRendering(isServer)\r\n\r\nclass Store {\r\n    @observable films;\r\n\r\n    constructor(initialData = {}) {\r\n        this.films = initialData.films != null\r\n            ? initialData.films\r\n            : null;\r\n    }\r\n\r\n    @action searchFilm = async (title,year,type) => {\r\n        \r\n    }\r\n}\r\n\r\nlet store = null\r\n\r\nexport function initializeStore(initialData) {\r\n    if (isServer) {\r\n        return new Store(isServer, initialData)\r\n    }\r\n    if (store === null) {\r\n        store = new Store(isServer, initialData)\r\n    }\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}