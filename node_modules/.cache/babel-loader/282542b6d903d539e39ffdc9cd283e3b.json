{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { action, observable, toJS } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nimport fetch from 'isomorphic-unfetch';\nimport { API_BASE } from '../constants/constants.js';\nvar isServer = typeof window === 'undefined';\nuseStaticRendering(isServer);\nvar Store = (_class = (_temp = function Store() {\n  var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, Store);\n\n  _initializerDefineProperty(this, \"films\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"searchFilm\", _descriptor2, this);\n\n  this.films = initialData;\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"films\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"searchFilm\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(data) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.films = Search;\n                  console.log('thisfilms', _this.films);\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    );\n  }\n})), _class);\nvar store = null;\nexport function initializeStore(initialData) {\n  if (isServer) {\n    return new Store(initialData);\n  } else {\n    if (store === null) {\n      store = new Store(initialData);\n    }\n\n    return store;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\cagat\\OneDrive\\Desktop\\Imdb\\stores\\store.js"],"names":["action","observable","toJS","useStaticRendering","fetch","API_BASE","isServer","window","Store","initialData","films","data","Search","console","log","store","initializeStore"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAGA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACAJ,kBAAkB,CAACG,QAAD,CAAlB;IAEME,K,sBAGF,iBAA8B;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAAA;;AAAA;;AAC1B,OAAKC,KAAL,GAAaD,WAAb;AACH,C,+EAJAR,U;;;;;WAAmB,E;;8EAMnBD,M;;;;;;;;;;;;iCAAoB,iBAAOW,IAAP;AAAA;AAAA;AAAA;AAAA;AACjB,kBAAA,KAAI,CAACD,KAAL,GAAaE,MAAb;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAI,CAACJ,KAA9B;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;;;;;;;;;AAMzB,IAAIK,KAAK,GAAG,IAAZ;AAEA,OAAO,SAASC,eAAT,CAAyBP,WAAzB,EAAsC;AACzC,MAAIH,QAAJ,EAAc;AACV,WAAO,IAAIE,KAAJ,CAAUC,WAAV,CAAP;AACH,GAFD,MAGK;AACD,QAAIM,KAAK,KAAK,IAAd,EAAoB;AAChBA,MAAAA,KAAK,GAAG,IAAIP,KAAJ,CAAUC,WAAV,CAAR;AACH;;AACD,WAAOM,KAAP;AACH;AACJ","sourcesContent":["import { action, observable, toJS } from 'mobx'\r\nimport { useStaticRendering } from 'mobx-react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { API_BASE } from '../constants/constants.js';\r\n\r\n\r\nconst isServer = typeof window === 'undefined'\r\nuseStaticRendering(isServer)\r\n\r\nclass Store {\r\n    @observable films = {};\r\n\r\n    constructor(initialData = {}) {\r\n        this.films = initialData;\r\n    }\r\n\r\n    @action searchFilm = async (data) => {\r\n        this.films = Search\r\n        console.log('thisfilms', this.films);\r\n    }\r\n}\r\n\r\nlet store = null\r\n\r\nexport function initializeStore(initialData) {\r\n    if (isServer) {\r\n        return new Store(initialData)\r\n    }\r\n    else {\r\n        if (store === null) {\r\n            store = new Store(initialData)\r\n        }\r\n        return store\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}