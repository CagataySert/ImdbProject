{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport fetch from 'isomorphic-unfetch';\nimport { KEY } from './constants/constants';\n\nvar LocalStorageApi = function LocalStorageApi() {\n  _classCallCheck(this, LocalStorageApi);\n\n  this.addFilmToFavorite = function (filmId) {\n    console.log('filmId');\n    return new _Promise(function (resolve, reject) {\n      var response = localStorage.getItem(KEY);\n\n      if (!!response) {\n        var filmArray = JSON.parse(response);\n        filmArray.push(filmId);\n        localStorage.setItem(KEY, _JSON$stringify(filmArray));\n        resolve();\n      }\n\n      localStorage.setItem(KEY, _JSON$stringify([filmId]));\n      resolve();\n    });\n  };\n};\n\nexport default LocalStorageApi;","map":{"version":3,"sources":["C:\\Users\\cagat\\OneDrive\\Desktop\\Imdb\\serverApi_LocalStorage.js"],"names":["fetch","KEY","LocalStorageApi","addFilmToFavorite","filmId","console","log","resolve","reject","response","localStorage","getItem","filmArray","JSON","parse","push","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,QAAoB,uBAApB;;IAEMC,e;;;OAEFC,iB,GAAoB,UAACC,MAAD,EAAY;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,WAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,UAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqBV,GAArB,CAAjB;;AAEA,UAAI,CAAC,CAACQ,QAAN,EAAgB;AACZ,YAAIG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAhB;AACAG,QAAAA,SAAS,CAACG,IAAV,CAAeX,MAAf;AACAM,QAAAA,YAAY,CAACM,OAAb,CAAqBf,GAArB,EAA0B,gBAAeW,SAAf,CAA1B;AACAL,QAAAA,OAAO;AACV;;AAEDG,MAAAA,YAAY,CAACM,OAAb,CAAqBf,GAArB,EAA0B,gBAAe,CAACG,MAAD,CAAf,CAA1B;AACAG,MAAAA,OAAO;AACV,KAbM,CAAP;AAcH,G;;;AAKL,eAAeL,eAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nimport { KEY } from './constants/constants';\r\n\r\nclass LocalStorageApi {\r\n\r\n    addFilmToFavorite = (filmId) => {\r\n        console.log('filmId');\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const response = localStorage.getItem(KEY);\r\n\r\n            if (!!response) {\r\n                let filmArray = JSON.parse(response);\r\n                filmArray.push(filmId)\r\n                localStorage.setItem(KEY, JSON.stringify(filmArray));\r\n                resolve();\r\n            }\r\n\r\n            localStorage.setItem(KEY, JSON.stringify([filmId]));\r\n            resolve();\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default LocalStorageApi;"]},"metadata":{},"sourceType":"module"}