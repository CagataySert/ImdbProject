{"ast":null,"code":"import _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { action, observable } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nimport fetch from 'isomorphic-unfetch';\nimport { API_BASE } from '../constants/constants.js';\nimport { configure } from \"mobx\";\nvar isServer = typeof window === 'undefined';\nuseStaticRendering(isServer);\nvar Store = (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Store() {\n    var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Store);\n\n    _initializerDefineProperty(this, \"films\", _descriptor, this);\n\n    this.films = initialData.films != null ? initialData.films : null;\n  }\n\n  _createClass(Store, [{\n    key: \"searchFilm\",\n    value: function () {\n      var _searchFilm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(title, year, type) {\n        var response, _ref, Search;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_BASE, \"&s=\").concat(title, \"&y=\").concat(year, \"&type=\").concat(type));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                _ref = _context.sent;\n                Search = _ref.Search;\n                this.films = Search;\n                console.log('Data : ', Search);\n                console.log('films:', this.films);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function searchFilm(_x, _x2, _x3) {\n        return _searchFilm.apply(this, arguments);\n      }\n\n      return searchFilm;\n    }()\n  }]);\n\n  return Store;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"films\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"searchFilm\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"searchFilm\"), _class.prototype)), _class);\nvar store = null;\nexport function initializeStore(initialData) {\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  return store;\n}","map":{"version":3,"sources":["C:\\Users\\cagat\\OneDrive\\Desktop\\Imdb\\stores\\store.js"],"names":["action","observable","useStaticRendering","fetch","API_BASE","configure","isServer","window","Store","initialData","films","title","year","type","response","json","Search","console","log","store","initializeStore"],"mappings":";;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,SAASC,SAAT,QAA0B,MAA1B;AAGA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACAL,kBAAkB,CAACI,QAAD,CAAlB;IAEME,K;;;AAGF,mBAA8B;AAAA,QAAlBC,WAAkB,uEAAJ,EAAI;;AAAA;;AAAA;;AAC1B,SAAKC,KAAL,GAAaD,WAAW,CAACC,KAAZ,IAAqB,IAArB,GACPD,WAAW,CAACC,KADL,GAEP,IAFN;AAGH;;;;;;;gDAGiBC,K,EAAMC,I,EAAKC,I;;;;;;;;uBACFV,KAAK,WAAIC,QAAJ,gBAAkBO,KAAlB,gBAA6BC,IAA7B,mBAA0CC,IAA1C,E;;;AAAtBC,gBAAAA,Q;;uBACiBA,QAAQ,CAACC,IAAT,E;;;;AAAhBC,gBAAAA,M,QAAAA,M;AACP,qBAAKN,KAAL,GAAaM,MAAb;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,MAAtB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKR,KAA3B;;;;;;;;;;;;;;;;;;;kFAdHT,U;;;;;WAAmB,I;;+DAQnBD,M;AAUL,IAAImB,KAAK,GAAG,IAAZ;AAEA,OAAO,SAASC,eAAT,CAAyBX,WAAzB,EAAsC;AACzC,MAAIH,QAAJ,EAAc;AACV,WAAO,IAAIE,KAAJ,CAAUF,QAAV,EAAoBG,WAApB,CAAP;AACH;;AACD,MAAIU,KAAK,KAAK,IAAd,EAAoB;AAChBA,IAAAA,KAAK,GAAG,IAAIX,KAAJ,CAAUF,QAAV,EAAoBG,WAApB,CAAR;AACH;;AACD,SAAOU,KAAP;AACH","sourcesContent":["import { action, observable } from 'mobx'\r\nimport { useStaticRendering } from 'mobx-react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport {API_BASE} from '../constants/constants.js';\r\nimport { configure } from \"mobx\";\r\n\r\n\r\nconst isServer = typeof window === 'undefined'\r\nuseStaticRendering(isServer)\r\n\r\nclass Store {\r\n    @observable films = null;\r\n\r\n    constructor(initialData = {}) {\r\n        this.films = initialData.films != null\r\n            ? initialData.films\r\n            : null;\r\n    }\r\n\r\n    @action \r\n    async searchFilm (title,year,type) {\r\n        const response = await fetch(`${API_BASE}&s=${title}&y=${year}&type=${type}`);\r\n        const {Search} = await response.json();\r\n        this.films = Search;\r\n        console.log('Data : ',Search);\r\n        console.log('films:' ,this.films);\r\n    }\r\n}\r\n\r\nlet store = null\r\n\r\nexport function initializeStore(initialData) {\r\n    if (isServer) {\r\n        return new Store(isServer, initialData)\r\n    }\r\n    if (store === null) {\r\n        store = new Store(isServer, initialData)\r\n    }\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}